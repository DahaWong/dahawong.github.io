<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>手指解放革命（一）：网页浏览</title>
      <link href="/blog11/2019/10/"/>
      <url>/blog11/2019/10/</url>
      
        <content type="html"><![CDATA[<blockquote><p>手指是我们与电子设备交互的主要部位，主要的动作有滑动、点击、滚动和按下。在使用设备的过程中，频繁和繁复的操作会让手指感到疲惫，同时大脑也要为冗余的动作多操一份心。<br><br></p><p>《手指解放革命》系列文章试探讨和分享如何更轻松地与电子设备沟通。</p></blockquote><p><code>（2019.10.13：目前博客有关代码样式的部分尚未完成，代码均放置在引用模块中。建议使用 PC 端阅读本文。）</code></p><h3 id="vimium-插件"><a class="header-anchor" href="#vimium-插件"></a>Vimium 插件</h3><p>Vimium 是一款能让使用者丢掉鼠标仅仅通过键盘在 Chrome 中浏览网页的插件。使用它的好处是不用在键盘和鼠标/触控板之间来回切换。另一方面，纯粹地敲击键盘比起用鼠标「移动 + 点击」或者触控板「滑动 + 点击」，手和手指移动的距离更短。</p><h4 id="基本动作"><a class="header-anchor" href="#基本动作"></a>基本动作</h4><p>Vimium 的原理可以理解为「键盘快捷键-动作」映射。其中预设了一些基本动作，启动后使用 [Shift + /] ，即 [?] 来查看所有的命令。下面列举一些特别推荐记忆的基本快捷键：</p><ul><li>[j]：网页向下滚动；</li><li>[k]：网页向上滚动；</li><li>[f]：显示网页所有含超链接的元素，根据显示的字母选择进入下一个网页；</li><li>[t]：即「<strong>t</strong>ab」，创建新标签页</li><li>[Shift+p]：即「<strong>P</strong>aste」，读取剪贴板（即刚刚复制过）的内容，粘贴到搜索栏搜索，并在新标签页打开；</li><li>[x]：即「<strong>✘</strong>」，关闭当前网页；</li><li>[r]：即「<strong>r</strong>efresh」，刷新当前网页；</li><li>[b]：即「<strong>b</strong>ookmark」，检索书签；</li><li>[o]：即「<strong>o</strong>pen」，显示网址输入栏。</li></ul><h4 id="自主配置"><a class="header-anchor" href="#自主配置"></a>自主配置</h4><p>Vimium 的功能当然不止于此，我们可以通过自行配置快捷键来做更多的事情。右键它的图标，选择进入「Option」，这里是可以自由发挥的地方：</p><p><strong>map 与 unmap</strong></p><p>找到「Custom key mappings」，在这里建立或者取消快捷键映射。配置「快捷键-动作」的格式如下 ，如果快捷键被预设映射占用，可以考虑先<strong>解除映射（unmap）</strong>，再建立映射：</p><blockquote><p><code># 格式</code></p><p><code>unmap [预设快捷键] [默认动作]</code><br><code>map [快捷键] [新动作]</code><br><br></p><p><code># 例子</code></p><p><code># 点击 [→] 前往下一个标签页</code></p><p><code>map &lt;right&gt; nextTab</code> <br><br></p><p><code># 点击 [Shift + i] 进入隐身页</code></p><p><code>unmap i</code><br><code>map i createTab incognito</code></p></blockquote><p>根据官方文档的 <a href="https://github.com/philc/vimium/blob/master/README.md" target="_blank" rel="noopener">Read Me</a> 和 <a href="https://github.com/philc/vimium/wiki/Tips-and-Tricks" target="_blank" rel="noopener">Tips-and-Tricks</a>，我做了一些有趣的个性化配置：</p><p><strong>① 快捷键访问指定网站</strong></p><p>对于最常用的、且首字母不是常用预设快捷键的网站，推荐使用<strong>语义性的</strong>略称（如 [daha]、[ins]）；而其它较常用的网站，使用一个非预设字母（比如[z]）加上网站的首字母（如[zz]、[zy]）。</p><blockquote><p><code># 格式</code></p><p><code>map [快捷键] createTab [网址]</code><br><br></p><p><code># 以打开本站为例</code></p><p><code>unmap d</code><br><code>map daha createTab https://blog.daha.me</code><br><br></p><p><code># 以打开 Instagram 为例</code></p><p><code>unmap i</code></p><p><code>map ins createTab https://www.instagram.com/</code><br><br></p><p><code># 以打开 YouTube、知乎 为例</code></p><p><code>map zy createTab https://www.youtube.com/</code></p><p><code>map zz createTab https://www.zhihu.com/</code></p></blockquote><p><strong>② 快捷键打开站内搜索</strong></p><p><img src="https://raw.githubusercontent.com/DahaWong/pictures/master/zhihu-search.png" alt="zhihu-search"></p><ul><li>「关键词-搜索栏」映射：<ul><li>打开你想映射的网站</li><li>找到该站搜索框</li><li>搜索任意内容回车后</li><li>复制网址</li><li>进入 「 Custom Search Engine」编辑框</li><li>修改网址以匹配以下命令</li></ul></li></ul><blockquote><p><code># 格式</code></p><p><code>[关键词]: [https://xxx.com/XXXXX=%s [网站名]]</code><br><br></p><p><code># 配置 [zhihu] 为知乎搜索关键词</code></p><p><code>zhihu: https://www.zhihu.com/search?type=content&amp;q=%s 知乎</code></p></blockquote><ul><li>「快捷键-关键词」映射<ul><li>进入「Custom Mapping Key」编辑框</li></ul></li></ul><blockquote><p><code># 格式</code></p><p><code>map [快捷键] Vomnibar.activateInNewTab keyword=[关键词]</code><br><br></p><p><code># 点击 [sz] （即 Search Zhihu 的略写）进入知乎站内搜索</code></p><p><code>map zh Vomnibar.activateInNewTab keyword=zh</code>ihu</p></blockquote><p>③ 更合理的 [f] 导航字母</p><p><img src="https://raw.githubusercontent.com/DahaWong/pictures/master/f.png" alt="f"></p><p>如前面所介绍的，预设 [f] 的功能是网页链接导航。在 Advanced Options，将「Characters used for link hints」中的「sdfercvjkluim」替换成「fjdkghsl」。如果你的打字指法标准，那么这样的配置能充分利用最灵活的食指和中指来点击链接。</p><p>④ 更方便地在标签页之间移动</p><p>下面的配置可以让你使用键盘的 [←]、[→] 前往相邻的标签页。你可能会担心文本框内固有快捷键会不会被占用（如这里的方向键在文本输入中是控制光标移动），答案是不会！</p><blockquote><p><code># 代码</code></p><p><code>map &lt;left&gt; previousTab</code><br><code>map &lt;right&gt; nextTab</code></p></blockquote><h4 id="注意事项及附录"><a class="header-anchor" href="#注意事项及附录"></a>注意事项及附录</h4><ul><li>自定义快捷键要留意冲突，比如：[zz] 和 [z] 是冲突的；[ins] 和 [i] 是冲突的，同时配置的话只执行最短的快捷键；</li><li>如果想完全自定义快捷浏览系统，可以使用 <code>unmapAll</code> 解除所有映射，再自行定义；</li><li>[esc] 用来退出一些特殊模式（比如：链接导航模式、搜索模式）</li><li>附录一：特殊的快捷键表示<table><thead><tr><th style="text-align:center"></th><th style="text-align:center">Windows</th><th style="text-align:center">Mac</th></tr></thead><tbody><tr><td style="text-align:center">&lt;a-其他键&gt;</td><td style="text-align:center">Alt + 其他键</td><td style="text-align:center">无</td></tr><tr><td style="text-align:center">&lt;m-其他键&gt;</td><td style="text-align:center">Meta + 其他键</td><td style="text-align:center">Command+其他键</td></tr><tr><td style="text-align:center">&lt;c-其他键&gt;</td><td style="text-align:center">Ctrl + 其他键</td><td style="text-align:center">Control + 其他键</td></tr></tbody></table></li><li>附录二：我的映射配置<ul><li><p>Custom key mappings</p><blockquote><p><code># 在下面自定义你喜欢的映射配置吧！</code><br><br></p><p><code># 网页切换：</code></p><p><code>map &lt;left previousTab</code><br><code>map &lt;right&gt; nextTab</code><br><code>map &lt;backspace&gt; goBack</code><br><code>map &lt;m-backspace&gt; goForward</code><br><code>map , goBack</code><br><code>map . goForward</code><br><br></p><p><code>unmap d</code><br><code>unmap i</code><br><code>unmap o</code><br><br></p><p><code># 最常用网站：</code></p><p><code>map da createTab https://blog.daha.me</code><br><code>map dri createTab https://dribbble.com</code><br><code>map ins createTab https://www.instagram.com/</code><br><br></p><p><code># 最常访问博客：</code></p><p><code>map &lt;c-j&gt; createTab https://blog.joway.io</code><br><br></p><p><code># 常用网站：</code></p><p><code>map zb createTab https://t.bilibili.com/</code><br><code>map zd createTab https://movie.douban.com/mine</code><br><code>map ze createTab https://www.evernote.com/Home.action?login=true#n=8a319073-074a-40fe-90aa-62ef18d17fd5&amp;s=s720&amp;ses=4&amp;sh=2&amp;sds=5&amp;</code><br><code>map zf createTab http://fanfou.com/home</code><br><code>map zg createTab https://www.github.com</code><br><code>map zi createTab https://www.instapaper.com</code><br><code>map zj createTab https://web.okjike.com/feed</code><br><code>map zl createTab https://liqi.io</code><br><code>map zm createTab https://mail.google.com</code><br><code>map zr createTab https://www.inoreader.com/</code><br><code>map zs createTab https://sspai.com/series/70/list</code><br><code>map zv createTab incognito https://www.v2ex.com</code><br><code>map zy createTab https://www.youtube.com/</code><br><code>map zz createTab https://www.zhihu.com/</code><br><br></p><p><code># 搜索系统：</code></p><p><code>map sw Vomnibar.activateInNewTab keyword=wiki</code><br><code>map sz Vomnibar.activateInNewTab keyword=zhihu</code><br><code>map ss Vomnibar.activateInNewTab keyword=sspai</code><br><code>map sb Vomnibar.activateInNewTab keyword=baidu</code><br><br></p><p><code># 其他：</code></p><p><code>map I createTab incognito</code><br><code>map R reload hard</code><br><code>map o Vomnibar.activateInNewTab</code></p></blockquote></li><li><p>Custom search engines</p><blockquote><p><code>wiki: https://www.wikipedia.org/w/index.php?title=Special:Search&amp;search=%s Wikipedia</code><br></p><p><code>zhihu: https://www.zhihu.com/search?type=content&amp;q=%s 知乎</code><br></p><p><code>sspai: https://beta.sspai.com/search/post/%s 少数派</code></p><p><code>baidu: https://www.baidu.com/s?wd=%s Baidu</code></p></blockquote></li></ul></li><li>附录三：Vimium中所有<strong>预设的映射</strong>以及<strong>对应的动作</strong><blockquote><p><code>map j scrollDown</code><br><code>map &lt;c-e&gt; scrollDown</code><br><code>map k scrollUp</code><br><code>map &lt;c-y&gt; scrollUp</code><br><code>map gg scrollToTop</code><br><code>map G scrollToBottom</code><br><code>map d scrollPageDown</code><br><code>map u scrollPageUp</code><br><code>map - scrollFullPageDown</code><br><code>map - scrollFullPageUp</code><br><code>map h scrollLeft</code><br><code>map l scrollRight</code><br><code>map r reload</code><br><code>map yy copyCurrentUrl</code><br><code>map p openCopiedUrlInCurrentTab</code><br><code>map P openCopiedUrlInNewTab</code><br><code>map i enterInsertMode</code><br><code>map v enterVisualMode</code><br><code>map gi focusInput</code><br><code>map f LinkHints.activateMode</code><br><code>map F LinkHints.activateModeToOpenInNewTab</code><br><code>map - LinkHints.activateModeToOpenInNewForegroundTab</code><br><code>map gf nextFrame</code><br><code>map gF mainFrame</code></p><p><code>map o Vomnibar.activate</code><br><code>map O Vomnibar.activateInNewTab</code><br><code>map b Vomnibar.activateBookmarks</code><br><code>map B Vomnibar.activateBookmarksInNewTab</code><br><code>map T Vomnibar.activateTabSelection</code><br><code>map - enterFindMode</code><br><code>map n performFind</code><br><code>map N performBackwardsFind</code></p><p><code>map H goBack</code><br><code>map L goForward</code></p><p><code>map t createTab</code><br><code>map J previousTab</code><br><code>map gT previousTab</code><br><code>map K nextTab</code><br><code>map gt nextTab</code><br><code>map ^ visitPreviousTab</code><br><code>map g0 firstTab</code><br><code>map g$ lastTab</code><br><code>map yt duplicateTab</code><br><code>map &lt;a-p&gt; togglePinTab</code><br><code>map &lt;a-m&gt; toggleMuteTab</code><br><code>map x removeTab</code><br><code>map X restoreTab</code></p><p><code>map ? showHelp</code></p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>译 | 管理 Hacker News 的孤独工作</title>
      <link href="/blog10/2019/09/"/>
      <url>/blog10/2019/09/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Hacker News 面临的问题是：网站最初推崇的围绕科技、知识的文化是否会扩展成一种更具包容性的、泛泛地看待科技的视角。</p></blockquote><p>作者：Scott Gelber<br>翻译：Daha<br>原文：<a href="https://www.newyorker.com/news/letter-from-silicon-valley/the-lonely-work-of-moderating-hacker-news" target="_blank" rel="noopener">https://www.newyorker.com/news/letter-from-silicon-valley/the-lonely-work-of-moderating-hacker-news</a></p><hr><p>完全开放的办公室几乎没什么乐子；而最有趣的事情之一莫过于窥视同事的网络浏览习惯。几年前，当我在旧金山为科技公司工作的时候，我注意到同事们总是在一个配色很土的、只有文字的网站上滚动着鼠标，它看起来像是 1999 年的互联网论坛。他们在浏览 Hacker News —— 一个收集网页链接的网站、一个信息发布平台。它是硅谷里孵化出来的东西，因此它在硅谷的科技人员之间最开始流行起来。就像纽约的人们和纽约诞生的《Post》和《Times》的关系一样。对于一些人来说，HN 是他们每天早晨第一个浏览的网站；它俘获了科技成瘾、具有商业野心，以及强烈的好奇心的人们。而这些正是硅谷的代名词。随便挑一天吧，这个网站上的高票链接可能是：一篇<a href="https://medium.com/swlh/brief-thoughts-on-getting-hired-as-a-senior-coder-94f38998bb08" target="_blank" rel="noopener">来自<em>Medium</em> 的投稿</a>，讲述科技圈的招聘情况；一篇<a href="https://www.outsideonline.com/2152131/freezing-death?page=all" target="_blank" rel="noopener">写于 1997 年的科普故事</a>，关于极寒下人体的失温濒死，来自《<em>Outside</em>》杂志；一个<a href="https://news.ycombinator.com/item?id=20571739" target="_blank" rel="noopener">开源的 VPN</a>，托管在 GitHub 上；一篇<a href="http://scheme2006.cs.uchicago.edu/11-ghuloum.pdf" target="_blank" rel="noopener">学术论文</a>，写于 2006 年，关于编译器的构造；一份 <a href="https://news.ycombinator.com/item?id=20297446" target="_blank" rel="noopener">来自Facebook 企业交流团队的公告</a>；一篇关于 Linux 内核的个人博客，以及<a href="https://www.deepsouthventures.com/i-sell-onions-on-the-internet/" target="_blank" rel="noopener">另一篇</a>在网络上贩卖洋葱的经历……几乎所有我认识的软件工程师都在虔诚地阅览。他们里面甚至没有一位是对 HN 持中立观点的。</p><p>和很多塑造了硅谷的软件产品一样，HN 一开始是作为业余项目（side project）成立的。2007 年，时任 YC（最早投资 Dropbox、Stripe、Reddit、Twitch 等的创业孵化器 ） 的老板，同时也是风险投资家的保罗 · 格雷厄姆（Paul Graham），为了测试他参与编写的新编程语言 Arc，创建了这个网站。最初，Graham 把它命名为「Startup News」。他希望在 Reddit 越来越受欢迎、成长为一个社区之前，这里能成为创业者和「准创业者」们的新家，而他们以前是活跃在 Reddit 上的。（「有不少我只认得网名的 Reddit 用户，但我清楚必须留意他们写的东西」，他在发布会上解释道，「所以我们正在统计像这样的一些文章的数量，它们帮助我们决定投资哪家公司。」）然而，几个月过去，Graham 发现以创业者为中心的对话有自身的局限性。于是他重新把网站命名为 Hacker News，并把它的关注对象扩大到了「任何优秀极客感兴趣的……任何能激发人类智识向好奇心的东西。」（注：HN 仍为 YC 所有。）</p><p>这个网站故意被设计得相当简单。它仅仅提供了一个动态的列表，用来存放用户提交的链接。每一条链接都可以被扩展成它自身的独特讨论区。在那里读者可以向链接或者评论投票：票数最高的 30 个链接将会呈现在网站的第一页。<a href="https:blog.daha.me/blog09/2019/09" target="_blank" rel="noopener">《Hacker News 社区指南》</a>里详细地说明了大多数非技术相关的新闻（尤其是政治新闻）是离题（Off-topic）的。用户们讨论关系型数据库的价值、联合创始人的人际关系复杂性，抑或大学辍学的优缺点；他们互相交换自己的工作环境的屏幕截图，然后在一个叫「书呆子竞赛」（Nerd Quiz）比较各自的结果，那是一个会让他们用所有字母来给一个编程语言命名的网站；他们在 Graham 写程序开发和企业家精神的一篇论文下做出评论——「就像下象棋、绘画或者写小说一样」，那篇文章里说，「赚钱是一项专业性非常高的技能。」——然后他们分享了关于怎样进入 YC 工作的建议。</p><p>起初，这个网站每天大约有 1600 个访客，Graham 就一个人运营和维护它。而现在，每个月将近五百万人会访问 HN，因此它变得更加难以维护。科技话题的讨论充满多样性和洞见。但是有关社会、文化以及政治的谈话与日剧增，尽管有《社区指南》，质量仍有下降的趋势——在最近的一篇《Times》的文章 「<a href="https://www.nytimes.com/2019/06/05/business/youtube-remove-extremist-videos.html" target="_blank" rel="noopener">Youtube 移除了上千份宣传极端理念的视频稿件</a>」 下，出现了将新闻业与宣传鼓动相提并论的回复；色情露骨的和否定<a href="https://baike.baidu.com/item/%E7%8A%B9%E5%A4%AA%E4%BA%BA%E5%A4%A7%E5%B1%A0%E6%9D%80" target="_blank" rel="noopener">犹太人大屠杀</a>的文字并排出现；一篇模棱两可地分析 HN 评论区平均智商的文章；还有一篇令人摸不着头脑的文章，找出了白人种族主义者和「<a href="https://www.wikiwand.com/zh/Black_Lives_Matter" target="_blank" rel="noopener">Black Lives Matter</a>」参与者的相同点。今年四月，当<a href>一则关于的故事</a>，（她是一名MIT的研究员，曾协助研发了捕获黑洞照片的技术）被顶上首页时，读者们仔细考察她在 GitHub 上开源的代码，企图颠覆她对研究做出的贡献。</p><p>​<em>&lt;待续&gt;</em></p>]]></content>
      
      
      <categories>
          
          <category> 译文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 互联网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>译 | Hacker News 社区指南</title>
      <link href="/blog09/2019/09/"/>
      <url>/blog09/2019/09/</url>
      
        <content type="html"><![CDATA[<p>作者：Hacker News<br>翻译：Daha<br>原文：<a href="https://news.ycombinator.com/newsguidelines.html" target="_blank" rel="noopener">https://news.ycombinator.com/newsguidelines.html</a></p><hr><h3 id="话题范围"><a class="header-anchor" href="#话题范围"></a>话题范围</h3><h4 id="切题内容"><a class="header-anchor" href="#切题内容"></a>切题内容</h4><p>极客（Hackers）感兴趣的一切内容，包括但不限于开发、创业话题。如果必须要概括一下的话，答案可能是：一切能满足人类「智识向好奇心」的内容。</p><h4 id="离题内容"><a class="header-anchor" href="#离题内容"></a>离题内容</h4><ul><li>大多数关于政治、犯罪或体育（除非它们揭示了一些有趣的新现象）；</li><li>尴尬的失败经历、灾难事件的视频；</li><li>可爱动物的图片；</li><li>如果一则内容被电视新闻报道了，那么它多半是离题的。</li></ul><hr><h3 id="投稿规范"><a class="header-anchor" href="#投稿规范"></a>投稿规范</h3><ul><li>请不要刻意突出你的标题，比如：<ul><li>使用全大写字母；</li><li>加入感叹号；</li><li>赞叹你发布的文章多么多么好。（因为在 Hacker News 有一个隐式的前提：既然发布了这篇文章，说明你认为它很重要。）</li></ul></li><li>请提交原文章的地址。如果一篇文章报道了其他网站发布的内容，提交后者的地址；</li><li>如果你提交的链接指向一个视频或者 PDF 文件，请在标题末尾添加 [video]、[pdf] 的标记作为提示；</li><li>如果标题包含了网站的名字，请把它删除。因为网站名称会在链接后直接显示出来；</li><li>如果标题以「数字」或者「数字 + 不必要的形容词」开头，我们建议你把它删掉。举个例子：将《 10 个进行 X 的方法 》替换为《 如何进行 X 》；将《 14 种惊人的 Ys 》替换为《 Ys 》。注意：数字具有实际意义的情况除外，比如《 5 种柏拉图立体 》；</li><li>在上述情况之外，请使用原标题。除非它具有误导性或者本身是标题党。不要在标题里对文章加以评述。</li><li>请不要为了提问或者是主观表达而投稿。类似的稿件请发送到 <a href="mailto:hn@ycombinator.com" target="_blank" rel="noopener">hn@ycombinator.com</a> 。类似地，请不要使用投稿功能向 YCombinator 孵化的公司提交你本可以使用邮件进行交流的疑问。</li></ul><hr><h3 id="言论建议"><a class="header-anchor" href="#言论建议"></a>言论建议</h3><ul><li>保持友善，不要太尖锐。评论应当具备思想性和实际意义，而不是引发分歧。</li><li>持反对意见的时候，请直接回复你不同意的评论，而不是圈出那个人的名字。</li><li>「愚蠢。1 + 1 = 2，又不是 3 。」应该被缩减成「1 + 1 = 2，不是 3 。」</li><li>请回复看起来最合理的论点，而不是较不合理的那个。你应当持有这种信念。</li><li>杜绝火药味的发言。不要发起引战言论，除非你真的想表达一个关于它的全新观点。</li><li>避免与话题无关的争论，或者离题的内容。</li><li>请不要未经思考地提交浅薄的言论，尤其是关于他人的工作。好的评论总能教给我们些什么。</li><li>请不要将 Hacker News 当作政治或意识形态的战场。这将破坏「智识向的好奇心」，而鼓励它是本站的建立初衷。</li><li>请不要就他人是否阅读过文章提出质疑：<ul><li>「你真的看这篇文章了？它已经说过了这点。」可被缩减为「这点这篇文章已经提及了。」</li></ul></li><li>我们允许你注销账号，如果它包含了敏感的个人信息。但请不要频繁地创建账号。Hacker News 是一个社区——用户应当有一个固定的身份，这样别人可以找到你。</li><li>请不要为了强调而使用大写字母。如果你想强调一个单词或短语，可以在它周围加上*星号*，这样它会以斜体呈现。</li><li>请不要投递软文或者具有公关性质的内容。这会弱化讨论氛围，并且往往含有错误。如果你有这方面的困扰，请给我们发邮件，我们将会查看相关数据。</li><li>请不要抱怨某条内容是不合适的。如果你认为一则故事是垃圾文章或者离题了，可以举报它。不要回复那些极其恶劣的评论，相反地你应当举报。如果你完成了举报，也不要在评论里谈论你做了什么。</li><li>请不要就评论的赞成数展开讨论。这没有任何好处，而且很无聊。</li><li>请不要说 Hacker News 正在变成 Reddit，这是半吊子的陈词滥调。</li></ul><hr><p><em>&lt;完&gt;</em></p>]]></content>
      
      
      <categories>
          
          <category> 译文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 互联网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拥抱黑暗的这些那些</title>
      <link href="/blog08/2019/08/"/>
      <url>/blog08/2019/08/</url>
      
        <content type="html"><![CDATA[<p>我盲目地无理由地信任黑暗，不是用于隐喻的、文学作品里形容人类内心的「黑暗」、而是物理世界的确实存在的那种：夜晚关上灯就可以轻松得到的无光线状态。</p><p>长辈的床头总会放置一个强光的手电筒，起夜的时候先打开来探照一下环境，找到灯的开关位置，确认不会被地上奇怪的障碍物绊倒后，最后安心地召唤光明。</p><p>而我从来不需要，当然在飞机上寻找犄角旮旯里女友送的书签不在此讨论范围内。总之我是相信黑暗的。感性思维运作时，我觉得它不会无缘无故伤害我，并且在这个方面我仅仅进行感性思考。</p><p>这是不怕黑暗吧？不是。「未知的东西能最大限度地刺激恐惧感」这个规律适用于所有人类。我很愿意在光明坦荡的大道上昂首前行。可是为什么不利用光呢？因为光太有限了，比起庞大的黑暗，它只能照亮一个小小角落。那些光没有照到的地方，会不会蛰伏着可怕的妖怪是我所担心的。更要命的是，一旦打开了手电筒，自己的位置就暴露无遗了。</p><p>所以恰恰相反，是不够勇敢，才会选择相信黑暗向人陈述的这套叙事，并且假意无畏地，拥抱它。</p><hr><p><em>&lt;完&gt;</em></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>事物考察的思维框架</title>
      <link href="/blog07/2019/04/"/>
      <url>/blog07/2019/04/</url>
      
        <content type="html"><![CDATA[<h3 id="一-语言与思维"><a class="header-anchor" href="#一-语言与思维"></a>一、语言与思维</h3><p>Ted Chiang 的小说<a href="https://book.douban.com/subject/26295448/" target="_blank" rel="noopener">《你一生的故事》</a>中描述了这样一种外星人的语言：它的呈现方式是非线性的，而不是我们所熟知的、从左至右地将文字次第展开。这种外星文字在二维平面堆叠在一起，通过文字的形状、相对位置便能传递丰富的信息。于是在你下笔的那一刻，必须要想到最后一笔落在何处。也就是说，第一笔的书写方式是由最后一笔决定的。如果把每一个笔划看成一次「事件」，那么「原因事件」是由「结果事件」决定的。在作者刻画的科幻世界里，掌握了这门语言的人，其看待时间的思维方式也因此改变----他们能够预知未来。</p><p>预知未来这个话题很虚，在短时间内我们不能推理演绎得出令人满意的结论，因此这里暂不讨论。值得谈谈的是这篇小说的出发点：「语言塑造思维」。作为思维的直接载体，语言的组成方式体现了我们的思考逻辑，切切实实地在影响我们的思维表达：</p><p>想象现在是语言初步形成的时代，原始部落已经创造了一大堆名词和动词。某天下午，三个部落 A、B、C 都发生了下面一幕：男人适才打猎归来，他举起手中的战利品示意其他人来吃，而这时其余的人其实已经吃过了。目前可以使用的词汇有动词「吃」、名词「饭」、名词「我」。显然为了表达过去的时态，他们必须进行额外的操作。</p><p>于是 A 部落的人说：「我 吃 饭 <strong>了</strong>」；B 部落的人说 ：「我 吃<strong>ed</strong> 饭」；C 部落的人说：「我 は 饭 を <strong>吃た</strong>」。三个部落似乎都是添加了什么元素，句子实现的逻辑却不相同：</p><p>A 语在原句「我 吃 饭」中添加<strong><a href="https://www.wikiwand.com/zh/%E5%8A%A9%E8%A9%9E" target="_blank" rel="noopener">助词</a>「了」</strong>，来表示过去发生的事情。顺着这个思路，想要表达进行时的话，他们也许会说：「我 吃 <strong>着</strong> 饭呢」。</p><p>B 语变化了动词的词性，即使用「吃ed」这个词表示「过去吃」。同理，他们用「我 吃ing 饭」来表达进行时。</p><p>C 语在过去时上，采用了和 B 语类似的处理方法：让动词变形。但是 C 语的原句组成方式不太寻常：「我 は 饭 を 吃」。他们使用<a href="https://www.wikiwand.com/zh/%E6%97%A5%E8%AA%9E%E5%8A%A9%E8%A9%9E" target="_blank" rel="noopener">「<strong>格</strong>助词」</a>来<strong>提示名词的地位</strong>：は 前面的名词是主语，を 前面的名词是宾语。A、B 语事先约定了先出现的名词「我」是主语，后出现的「饭」是宾语。因此「我吃饭」和「饭吃我」在  A、B 语中是截然不同的意思。而因为格助词的存在， C 语的「我 は 饭 を 吃」和 「饭 を 吃 我 は」可以表达相同的意思。</p><p>上面的假想场景展示了不同的人种面对时间概念，是怎样用自然语言来进行恰当描述的。像这样，随着时间慢慢推进，自然语言和思维逻辑互相推动着发展，使人类渐渐理解、创造出更为复杂精致的事物。</p><h3 id="二-形式语言"><a class="header-anchor" href="#二-形式语言"></a>二、形式语言</h3><p>除了<strong><a href="https://www.wikiwand.com/zh/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80" target="_blank" rel="noopener">自然语言</a></strong>之外，还有另一种语言类别：<strong><a href="https://www.wikiwand.com/zh/%E5%BD%A2%E5%BC%8F%E8%AF%AD%E8%A8%80" target="_blank" rel="noopener">形式语言</a></strong>。通常认为自然语言是「自然地」发展而来的，它同<strong>声音</strong>这一生物的天然属性直接挂钩。世界上绝大多数民族使用表音文字记录语言。尽管为了便于系统化地学习，语言学家们为自然语言制定（甚至添加）了详细的词法、句法、语法规则，在逻辑结构上它依旧是高度自由的。自由也意味着松散，像「大眼睛的小 L 的妈妈」这样简单的短语就存在<strong>修饰主体是谁</strong>的歧义；自由也意味着概念重复，比如「漂亮的小 L」和「美丽的小 L」几乎是同一个意思。规则上的自由在日常交流中不仅无伤大雅，而且可以给语言增色。但在严肃的科学领域就行不通了，于是人们发明了各种形式语言。</p><p>形式语言是一套逻辑严密的符号体系。为了高效地传递概念之间的联系（比如：运算），它们往往设计得非常简洁，几乎看不到冗余。这样设计的另一个原因是，形式语言编写的目的不在于与人的沟通，更多的是解决问题，或是与机器「沟通」，让它们解决问题。计算机程序语言、数学公式都是形式语言。</p><h3 id="三-框架演绎"><a class="header-anchor" href="#三-框架演绎"></a>三、框架演绎</h3><p>和自然语言一样，编程语言也改变了我看待事物的思路。以前在生活中很少有需要「定义」「构造」东西的场合。接触了编程之后，经常需要定义函数和类来实现某些功能以及解决问题。慢慢地我意识到任何的事物或者过程都有着类似的结构，因此怎么细致地考察它们是有迹可循的。如果有一个思考的框架，在考虑问题的时候就能尽可能地避免遗漏，减少因思路不清晰而产生的慌乱以更好地决策。下面是框架中的<strong>四种元素</strong>：</p><blockquote><p>属性</p><p>动作及动作对象</p><p>所有物与资源</p><p>环境与包含</p></blockquote><h4 id="属性"><a class="header-anchor" href="#属性"></a>属性</h4><ul><li>该事物天生拥有的性质，一般而言是<strong>静态</strong>的。</li><li><strong>关键属性</strong>是和指<strong>功能</strong>强相关的属性。</li><li>将关键属性全部列出后应该能将它同其它事物区分。</li><li>享有同样<strong>关键属性</strong>的不同事物可以考虑进行横向比较。</li><li>维系事物处于某种状态的属性很重要，考虑削弱或是去除它之后的后果如何。</li></ul><h4 id="动作及动作对象"><a class="header-anchor" href="#动作及动作对象"></a>动作及动作对象</h4><ul><li>动作抽象地展示该事物是如何与其他事物发生联系的，一般而言是<strong>动态</strong>的。</li><li>考察一个<strong>动作</strong>涉及的<strong>全部</strong>主体，即动作对象。</li></ul><h4 id="所有物与资源"><a class="header-anchor" href="#所有物与资源"></a>所有物与资源</h4><p>所有物：事物已经包含的、可<strong>调度</strong>的一切东西。</p><p>资源：事物<strong>需要</strong>消耗的具备价值的、数量有限的东西。</p><ul><li>资源未必是一种所有物，也许是需要拥有但尚未拥有的物品。</li><li>如：金钱、人力、空间、时间。</li><li>资源的<strong>分配调度情况</strong>决定了动作成功完成的程度，也是<strong>决策</strong>的要素。充分考虑机会成本的大小。</li></ul><h4 id="环境与包含"><a class="header-anchor" href="#环境与包含"></a>环境与包含</h4><ul><li>事物存在或动作发生是否受限？这种<strong>限制</strong>称为条件。</li><li>多种条件同时发生形成一种环境。</li><li>考察<strong>包含着</strong>事物的<strong>上一级</strong>是什么有助于全局思考。</li></ul><h3 id="四-结语"><a class="header-anchor" href="#四-结语"></a>四、结语</h3><p>显然，不存在一个包罗万象的模型能够描述一切事物和发生在它们身上的行为。思维框架只是为解决某个问题提供一个<strong>可能的</strong>探索路径。清楚地知道考察该事物的<strong>目的</strong>、考察的东西究竟有什么性质才是贯穿考察过程始终的根基。</p><hr><p><em>&lt;完&gt;</em></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>话筒、信笺与爱情 | Irrational</title>
      <link href="/blog06/2019/02/"/>
      <url>/blog06/2019/02/</url>
      
        <content type="html"><![CDATA[<p>不久前想到，以前异地的情侣们是靠信件来交流的，现代人通过这种方式交流应该也蛮有意思。于是便向女友小鸟小姐提议互相寄信。这随即引出了一个问题：既然可以用电话、微信交流，那么写信是否有其必要意义？</p><p>诚然，在这个信息高速交换的时代，不说信件，传统移动通信（电话、短信）都正在一步步地被互联网通信所取代。毫无疑问，互联网通信胜出的原因是高效、便捷与廉价。所谓<a href="https://zh.wikipedia.org/wiki/%E9%80%9A%E4%BF%A1?oldformat=true" target="_blank" rel="noopener">通信</a>，就是发送和接收双方之间进行信息传递。香农的理论认为，每则信息所包含的平均信息量可以用<strong>不确定度</strong>来衡量。从另一个角度来看，通信正是为了消除不确定性而存在的。因而信息之间的交换自然是越快越好，这样我们可以及时地确定某个人、某件事的状态。<a href="https://zh.wikipedia.org/wiki/%E5%8D%B3%E6%99%82%E9%80%9A%E8%A8%8A?oldformat=true" target="_blank" rel="noopener">IM</a> 软件（如Telegram、微信）作为互联网通信工具的代表，以其高效、便捷的特性理所应当地脱颖而出。</p><p>于是回过头来看，打电话、寄信便显得相当低效了。不过这两种低效有着本质上的不同，得从通信的两种途径说起：<strong>面向连接的通信</strong>和<strong>非连接的通信</strong>。这两个概念来自于计算机的两种通信协议，前者需要双方同时「在线」，比如语音电话的交流；后者只需发送方把信息发送到某个指定的接收点，接收点再转发给接收方，这样就省去了同步在线的要求，寄信就是这样的过程。刚刚接触互联网的人在发送信息的过程中经常会发「在吗」，即沿用了打电话的思路。实际上这在即时通信中是没有必要的，确认同步反而会浪费双方的时间。</p><p>电话的低效在于，通话双方必须同时接听。如果一方正在开会，或是手机没电关机，信息传递的通路便被阻拦了；而信件的低效来自于「硬件」层面：信件两地奔波，传递速率太慢了。而且比起语音通话同步所带来的低效，信件的接收时长更让人无法忍受。</p><p>对于异地的情侣而言，信件和通话的积极意义「之一」是「亲切感」：可以看见对方亲手写的字，可以听见对方的声音；积极意义「之二」是「仪式感」：通过某种约定的程序（仪式），来唤起某种特定的、「期待」的心动。下面即将具体阐述的，是积极意义「之三」。</p><hr><p>早期的聊天软件，消息的编辑状态是透明的。打字、删除、修改过程对方都能看得见，这更像是语音通信的文字化。而现在，以微信为例的话，如果愿意，消息编辑的状态可以做到完全封闭。因为<strong>即时性</strong>，所以对方的反馈很可能也是即时的。这一点和面对面交流几乎一样。与此同时，文字可以反复地<strong>修改</strong>，而书信也是如此。问题出现在，当文字「即时可修改」的时候，表达的目的可能会出现偏差，变成了「应对（想象中的）对方的即时反馈」。</p><p>在这种情况下，信息失去了「告知对方自己的真实想法」的意义。同理另一方面，面对接收的信息，我们会陷入习惯性地快捷回复，缺少了沉淀和消化的过程，从而阻碍深层次的交流。书信的信息延时正好解决了这两个问题。其核心优势在于，不需要在意如何应对即时的回应，不会被打断，以一种更加合乎逻辑的方式，经过思考后单方面地传送给对方。这样便开启了一个深度交流的时空通道。</p><p>在互联网时代，进行书信交流显然是一种非理性。这个结论的前提是，「快速」就是优秀。可是亲密关系的发展就应当是缓慢的，建立复杂深入的连结需要时间。进一步问，为什么要花时间那么多时间建立伟大友谊呢？</p><br><br><p>因为人类就是非理性的动物啊。</p><hr><p><em>&lt;完&gt;</em></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 情感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟的城市 其一</title>
      <link href="/blog05/2018/09/"/>
      <url>/blog05/2018/09/</url>
      
        <content type="html"><![CDATA[<p>这两天抽空看了卡尔维诺的《看不见的城市》，两百页不到，一会工夫就看完了。</p><p>这是一部不像小说的小说，王小波评价卡尔维诺这一时期的作品时说「他在探索小说艺术的无限可能」。这么说不无道理，因为从读者的反馈就能看出端倪：一部分人赞叹「不愧是大师之作！」，另一部分人报怨其「形式大于内容」，完全摸不着头脑。得到这类评价的作品多是剑走偏锋，脱离了大众的常规预期。探索形式可能性的作品更是如此。</p><p>很快想到姜文的电影，尤其是《太阳照常升起》，很多人声称看懂了，并给出了自己的解读。我连着看了两遍，说实话真的没懂，翻完影评可能才看清了那么一点点轮廓。我们会掉进「无法理解」的境地的原因是：没有共鸣。和文字没有共鸣，间接地，也就是和作者没有共鸣，即俗话说的鸡同鸭讲对牛弹琴。《太阳》讲的是上个世纪中男人和女人的事情，让我代入其中着实困难（而且我的历史素养还很差）。</p><p>关于有无「共鸣」，《人间失格》的评价两极化是个典型。这是一本极度灰暗的小说。有人曾得出这样的结论：读不懂太宰的人是幸福的。说得太对了，一个心里没有半点阴霾的人永远都不会读懂《人间失格》。</p><p>回到《看不见的城市》。前面说它「不像小说」，是因为通俗意义上来讲，小说应该围绕一个或几个人物，然后展开讲他们之间跌宕起伏的故事。故事性和连贯性是常人评判小说是否可读的标准。有的小说很坏，一开始讲完全破碎的故事，最后「啪」，巧妙地串成一串，这当然也算「连贯性」的一种，可读性还很强。而《看不见的城市》里，主人公只是故事的载体而不是主体，主体是马可·波罗向忽必烈汗描述的一座座梦幻城市。甚至连结尾都没有画上完整句号的感觉。</p><hr><p>这本书到底讲了什么？也不好给出答案，就好比被问到「人生的意义」。读《看不见的城市》是一个<strong>验证与体悟</strong>的过程：你会把这些城市的意象一一和自己去过的城市比对，然后你就能感受到城市就呈现在眼前：你能看见城市过往的兴衰更替，你能摸到城市未来的流动方向。因此不好说这本书的终极主旨是什么，其全部意义在于你与它产生的共鸣。而能产生多少共鸣就因人而异了，取决于你去过「多少」城市——这个说法容易引起误解，「多少」指的不是绝对数量：或许你出生到现在只待过一个城市，甚至不是城市，这些都无所谓。只要对她有足够深的<strong>体察</strong>，你就能在书里看见黄金。</p><p>说到「体察」，总不能体察钢筋水泥，体察的对象是人，钢筋水泥背后的建造它们的人。城市的形状是人类文明的具象表现。城市的覆灭就是旧王朝的垮台，城市的重建就是新时代的兴起。因而「看不见的城市」的具体含义是「看不见的城市与城里的人和事」。你能看见多少黄金，由你的眼睛和经验决定。正如卡尔维诺在书里这么说：</p><blockquote><p>掌握故事的不是声音，而是耳朵。</p></blockquote><hr><p>书中还有这么一段，马可·波罗对忽必烈汗说：「或许我们只是名字叫做『马可·波罗』和『忽必烈』的两个流浪汉罢了」。这里作者想表达的是，「名字」只是代号罢了，城市的名字也一样。马可·波罗看似描绘了 55 个城市，实际上也是<strong>同一个城市</strong>的 55 个不同的意象，他给这些意象起了名字而已。</p><p>于是我不再受名字的束缚，联想到一座<strong>虚拟的城市</strong>——互联网中的软件。对于跟上时代节奏的现代人而言，互联网俨然成为自己的第二家园：人们在网上购物、娱乐、聊天、书写、工作、学习，却在现实中发呆、打盹、睡觉。另一个方面，互联网的「半匿名」所产生的自由空间，使得它本身成为了人性的放大器。用「软件」替代书中的「城市」之后，你会和作者产生更多的共鸣。如这句：</p><blockquote><p>即使是一对恋人赤身裸体地缠绕在一起肌肤相亲时，也要力求姿态更美；即使是凶手将匕首刺进对方颈项动脉时，也要尽量使刀插得更深，血流得更多，<strong>因为重要的不在于他们的交合或者凶杀，而在于他们在镜中交合或者凶杀的形象要冷静清晰</strong>。</p></blockquote><p>读第一句你会想起朋友圈那些秀恩爱的朋友们，读到第二句你会想起那些仿佛仇视一切的喷子。在现实中看见他们的频率比网上要低得多，这座城市就是这样。我们在手机上切换不同的软件，正如我们辗转于一座座光怪陆离的城市。当你惊异于卡尔维诺精准的叙述，他或许会告诉你：我只是老老实实地刻画了人性。</p><hr><p><em>&lt;待续&gt;</em></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书有感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谈谈作业代写</title>
      <link href="/blog03/2018/08/"/>
      <url>/blog03/2018/08/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文系友人 @楼下大黑 的投稿</p></blockquote><p>昨天早上共青团中央推送了一篇文章，大概讲的是现在大学生代写中小学生作业的现象很普遍，在陈述完已有现象的基础之上做了一番分析。总的来说这篇文章还是有可圈可点之处的，毕竟面对的是这样子的一个社会问题，文章的最后还是从社会上的多个主体的角度出发对这个问题产生的原因做出了探讨。倒是不敢说这篇文章写的有多么的高明，能一针见血地指出问题，最起码从思考和分析问题的角度上出发，就要比隔壁经常推送鸡汤文的官方媒体要强得多。</p><p>先说目的，最近一段时间看赵老师（微信公众号：大浪淘沙）看多了，有点被洗脑，无非就是想写点东西，整理（输出）一下自己的思想。在加上这样一件事情算说是一个社会问题，我想我也算是看赵老师的文章也算是不少了，个人隐约觉得在这样的一个现象背后会隐藏着一个阶层异化的问题：中小学生缺乏学习动力，通过购买代写服务来完成任务；大学生暑期时间不去做科研、实习、竞赛，廉价出卖自己的劳动力来赚取利益，其实个人感觉这每个方面展开来分析，甚至是去做社会调查的话，都能够做出来不少东西。</p><p>比如，如果说我们有购买代写服务的这些学生的家庭背景信息的话，学习人文社科类的同学总能够在这里面分析出一些什么东西出来。为了能够增强本文的说服力，文章中必须要有一些数据或者是图片，这样才能显得有理有据令人信服。</p><p><img src="http://pad7nxklz.bkt.clouddn.com/03_1.png" alt="03_1"></p><p>对，你没有看错。其实在码这部分的文字之前我已在纸上把我想分析的一些结论都写了一大半了，剩下的就是要加以佐证来增强说服力了，哪知道这个结果却结结实实地打了我一脸，真是让人有点不知所措。回头再仔细看了一下团中央推出来的那篇文章，人家的检索关键词是「<strong>代写暑假</strong>」。哦，原来是这样，怪不得我检索不到。</p><p><img src="http://pad7nxklz.bkt.clouddn.com/03_2-min.png" alt="03_2"></p><p>将淘宝检索的关键词换成「代写暑假」之后，确实能够检索到一些内容，共计 17 条记录：</p><p><img src="http://pad7nxklz.bkt.clouddn.com/03_3-min.png" alt="03_3"></p><p>其中，付款人数超过 1000 的为两条，最高为 8000 ；1 人付款以上为 4 条，其余为 0 条。其中销量比较多的是代写文章、文案、软广告、商业策划书等等服务，在搜索页面的右侧有两条记录，人家在上面明确地说明了，论文、作业不接。至于代写作业的服务，有吗？当然是有的，其中一个 9 人付款，另一个 1 人付款。如果说一下把两张图放在一起对比的话还是挺有意思的。</p><p><img src="http://pad7nxklz.bkt.clouddn.com/03_4-min.jpg" alt="03_4"></p><p>如上面两组图所示，左侧的是淘宝的直接截图，右侧是共青团中央推送的文章里所展示出的图片。对比一下大家都能发现，团中央推出来的这篇文章里头把「有 X 人付款」这一栏给打码打掉了，至于原生态的淘宝截图上大家可以看到是「 1 人付款」。而另一幅图片上团中央只截图了商家的广告，没有截图付款人数，付款人数是 9 人。说实话， 1 人付款这个码打在这边显得十分的辣眼睛，大有掩耳盗铃之势，想必小编在写这篇文章的时候也注意到了这个问题，也许是迫于某些因素，需要推这么一篇文章出来。但是毕竟团中央的大部分受众是大学生，文化水平较高，如果不多注意的话肯定露馅，因此不得不在此处打了一个十分难看的马赛克。</p><p>经过微博上搜索，我找的这篇文章的源头，是大河网在 7 月 25 日的一篇新闻推送，先把截图放在下面：</p><p><img src="http://pad7nxklz.bkt.clouddn.com/03_5-min.png" alt="03_5"></p><p>在这其中值得注意的是这样子的两句话，「相关商品数目多达 4800 多项，其中大部分商品涉及代写文章」，「店主向记者表明，一本练习册 40 元，没有答案的话再加 20 元」。现将淘宝搜索「代写」的记录放在下图：</p><p><img src="http://pad7nxklz.bkt.clouddn.com/03_6-min.png" alt="03_6"></p><p>从截图中我们可以看出，淘宝中确实有大量提供代写服务的，<strong>但是</strong>如果仔细看一下的话我们可以发现，大部分的代写文章为：各类稿件、读后感、商业策划书，软广告等，甚至包含专利和EI、SIC论文，但是这些代写文章的内容可以说与学生的假期作业内容大部分<strong>无关</strong>，当然我们不能把读后感这个东西排除掉，毕竟不少学生的语文作业就包含了读后感这一项，但是我们更没有办法把这些东西和代写学生作业划上等号。</p><p>上文的两句话如果拆开来看当然没有任何问题，网络代写文章服务 4800 条， OK 没有问题；至于代写学生作业收费这一点，当然不能够排除有商家在地下从事这种活动，代写作业收费不低也是可观存在的现象，这两句话的前后逻辑应该是完全不一样的，此代写非彼代写。但是如果说把这两句话连起来读，并且放在全文的一个大语境之下，读出来的应当是这样子的一个逻辑链条：淘宝上有 4800 多个商品涉及代写学生假期作业，其中一个商家明确表示，一本练习册 40 元，没答案多家 20 ，科目多多优惠多多哦。这样子的文章误导性实在是太强，很明显有着转移矛盾的嫌疑，我自己也被误导了。</p><hr><p>当我完成以上的求证过程之后，心里却是有点不是滋味，因为自己原本的目的是结合现有的问题写一篇时评之类的东西，整理和输出一下自己的观点。结果自己亲自上网查证之后查出来是这样一个玩意儿，导致这样一篇文章写出来带着强烈的吐槽意味。</p><p>大学生给中小学生代写作业这一现象是真实存在的吗，答案是一定的，这是一个必然存在的现象，而且我甚至能够根据自己的经验判断出，涉及这场知识交易的学生不会是个例，会存在不少这样或那样的平台、中间商。资本家为了百分之三百的利益都敢上绞刑架，那么做这种事情的中间商赚点小钱对于那些唯利是图的人来说又算是什么呢，学生们能不能真正学到东西，关他们屁事。真正让我觉得槽点满满的是媒体在报道这件事时候的态度和方式，代写作业服务这一现象是否存在，当然存在；这一现象是否普遍，值得商榷，普遍到什么程度，这也是一个问题。或许这确实是一个普遍的现象，但是媒体在报道时所提供的证明资料却又太少了。</p><p>在缺乏证明材料的前提之下，报道就<strong>把它当做了一个普遍事件</strong>来进行推送，误导性确实太强。正如文章中所言，这些平台多半标榜自己的写手是名牌大学的学生，缺又没有提供证明材料一样，在缺乏足够「实锤」的证据之前，便讲文章的题目取名为「这项『业务』火爆」，是否有些操之过急了呢？尤其是把「 1 人付款」这几个字给打上马赛克，吃相实在谈不上是优雅，同隔壁热衷于推送鸡汤的公众号相比，如果说文章推的好了，那是一大进步，但是如果做不好就想当标题党，那无非是五十步笑百步而已。</p>]]></content>
      
      
      <categories>
          
          <category> 投稿 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社会 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个简约酷炫的 Windows 桌面</title>
      <link href="/blog04/2018/08/"/>
      <url>/blog04/2018/08/</url>
      
        <content type="html"><![CDATA[<p>在这台电脑买了不久后，我就听说了有一款美化 Windows 系统桌面的软件 Rainmeter ，可以通过安装别人做好的皮肤部件，彻底地改造桌面。下载完我做的第一件是便是到 Rainmeter 的百度贴吧去搜索各种花哨的皮肤。当时安装了这么几个部件：</p><ul><li>程序坞 1（Dock1）：放置常用软件</li><li>程序坞 2（Dock2）：<ul><li>硬盘</li><li>其它软件、常用网站</li></ul></li><li>导航栏（Navigation）：文档、图片、电影等</li><li>时钟（Clock） 、日期</li><li>便签</li><li>回收站（Recycle Bin)</li></ul><p>这样一来我的桌面上就可以不用放任何文件和快捷方式了！但是很明显，桌面并没有变得更加轻盈：一是加载过多的皮肤拖慢了开机和运行速度，二是总也找不到那么多设计风格相似又和壁纸匹配的部件。虽然别扭，不过我还是说服自己用了两年。直到昨天我在 Youtube 上看到一部介绍 Rainmeter 皮肤的<a href="https://www.youtube.com/watch?v=A1inqFYnOKQ" target="_blank" rel="noopener">视频</a>，才恍然大悟：原来 Rainmeter 应该这么用！再结合 Wox 的使用，便可以在 Windows 系统下获取最舒适的访问体验。</p><p>我现在的桌面是这样的，只用了两个 Rainmeter 皮肤（时钟 + 导航）：</p><p><img src="/img/thumbnail/blog04.png" alt="04_1_Desktop"></p><p>下面就说说我是如何打造桌面的（所有工具的下载地址见文末）：</p><h2 id="壁纸-rainmeter"><a class="header-anchor" href="#壁纸-rainmeter"></a>壁纸 &amp; Rainmeter</h2><p>第一步挑选壁纸，原则是简约大气，不能有过于精细的细节。我喜欢冷色调，于是选择了一幅神似<a href="https://ja.wikipedia.org/wiki/%E7%A5%9E%E5%A5%88%E5%B7%9D%E6%B2%96%E6%B5%AA%E8%A3%8F" target="_blank" rel="noopener">《神奈川冲浪里》</a>的海浪图片。因为接下来要搭配一个占据大版面的时钟，所以极简风格的壁纸也是不错的选择，注意不要有过多的空白。</p><p><img src="/img/article_pic/04/2.png" alt="04_2_Wallpaper"></p><p>第二步挑选 Rainmeter 的时钟和导航，依然要简约大气，约束条件是壁纸。在哪里找这样的时钟呢？最简单的是在油管，可以预览动态效果，并且肯定是精品（不然不会拿来做视频）。你会发现这些皮肤都来自 <a href="https://rainmeter.deviantart.com/" target="_blank" rel="noopener">deviantart</a> ，所以也可以直接到这个网站里搜索。我的时钟是在<a href="https://www.youtube.com/watch?v=3B8wbG10xC4&amp;t=10s" target="_blank" rel="noopener">这里</a>找到的，它可以显示日期 + 时分秒，我嫌四个栏多余，就改动参数把日期去掉了。然后找一个导航，配置好对应文件路径。回收站同理，大功告成！</p><blockquote><p>简略说明一下 Rainmeter 的操作：下载了后缀名为「 .rmskin 」的皮肤后双击打开，「 install 」安装。在桌面上找到皮肤，【右键 - 编辑皮肤】进行参数修改。常见的参数有位置、颜色、路径、图标等等。改完之后【刷新皮肤】来查看效果变化。</p></blockquote><p>第三步调整壁纸亮度，因为有可能亮度过高影响皮肤的效果。用 Ps 或者其他图片编辑软件<strong>微调</strong>一下，以 Photoshop CS6 为例：【打开 Ps  - 拖入壁纸文件 - 图像 &gt; 调整 &gt; 曲线/曝光度】，在曲线上选择锚点然后拉动它（们）改变曲线形状，「凸起」整体变亮；「凹陷」整体变暗（下图）。曝光度调节较简单，略。最后存储为 jpg 格式导出即可。</p><p><img src="/img/article_pic/04/3.png" alt="04_3_Ps"></p><h2 id="translucent-tb"><a class="header-anchor" href="#translucent-tb"></a>Translucent TB</h2><p>Windows 任务栏颜色调整/透明化工具。需要设置开机自启动，参考知乎的<a href="https://www.zhihu.com/question/32129337/answer/147214428" target="_blank" rel="noopener">这篇答案</a>。命令语句在 <code>user.md</code> 中，没有 markdown 编辑器的话用 txt 格式打开查看。</p><p>关于 tint 的颜色设置，由四个 16进制数组成。例：AF40806B→|AF|40|80|6B|，分别对应：|<strong>T</strong>ransparency|<strong>R</strong>ed|<strong>G</strong>reen|<strong>B</strong>lue|。RGB 你可以在<a href="https://www.colorhexa.com/" target="_blank" rel="noopener">这里</a>查到。一个 16 进制数的范围是 0~255，即 00~FF，透明度根据比例来换算。我的设置如下：<code>TranslucentTB.exe --tint d8404060 --dynamic-ws tint</code>，效果是有窗口打开则任务栏显示淡黑色，没有则呈现透明状态。</p><h2 id="wox"><a class="header-anchor" href="#wox"></a>Wox</h2><p>你可能在想仅仅一个导航会不会不够用？是的，确实不够，所以我们需要 Wox ，它可能是 Win 下最好的启动工具。任何状态下只要按下「Alt + 空格」，就可调出搜索框。这个搜索框可以帮你完成搜索文件、查单词、查颜色、计算、关机/睡眠、谷歌搜索……具体看<a href="https://sspai.com/post/33460" target="_blank" rel="noopener">这篇文章</a>吧。</p><p><img src="/img/article_pic/04/4.png" alt="04_4_Wox"></p><h2 id="下载"><a class="header-anchor" href="#下载"></a>下载</h2><ul><li><a href="https://www.rainmeter.net/" target="_blank" rel="noopener">Rainmeter </a>  桌面美化</li></ul><ul><li><a href="https://github.com/TranslucentTB/TranslucentTB/releases/download/2017.3/TranslucentTB.2017.3.zip" target="_blank" rel="noopener">TranslucentTB</a>  任务栏透明化</li></ul><ul><li><a href="https://github.com/Wox-launcher/Wox/releases/download/v1.3.524/Wox-1.3.524-full.nupkg" target="_blank" rel="noopener">Wox</a>   效率启动工具 <em>(把后缀名改为 zip 后解压)</em></li></ul><ul><li><a href="http://www.wox.one/plugin" target="_blank" rel="noopener">Wox插件一览</a></li></ul><hr><p><em>&lt;完&gt;</em></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 桌面管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谈谈网上冲浪</title>
      <link href="/blog02/2018/07/"/>
      <url>/blog02/2018/07/</url>
      
        <content type="html"><![CDATA[<p><a href="https://daha.me/blog01/2018/06/" target="_blank" rel="noopener">上篇博客</a>里讲到了微信公众号对信息进行<strong>封锁</strong>垄断的种种行为，这是「互联网壁垒」的形式之一，它几乎是张扬的。而另一种壁垒的形式更加隐蔽，那便是各大互联网公司极力发展的基于<strong>算法</strong>的信息推荐。它的原理是推荐「跟你喜欢同一内容的人也喜欢的另一内容」，或是「大家都在看的内容」。这本身并没有什么特别不好，你打开一个撸猫视频，看完之后发现算法推荐了一个更萌的猫，岂不快哉？它的确可以帮助我们更加深入地了解某一事物。</p><p><strong>但是，我们的时（sheng）间（ming）是有限的，<strong>这意味着你看了这一部分的信息，另一部分的则将无暇顾及——没有人能够看遍所有的信息。所以问题在于，算法带来的</strong>价值</strong>究竟是否值得你牺牲获取其他信息的时间呢？这似乎难以衡量。就我所感受到的，算法推荐的质量实在称不上优秀。比如我在 B 站搜索了一次 JoJo ，以后我的首页就被各种玩梗的视频霸占了，质量上只能说是良莠不齐——自然，莠是多数。同时我又不可能点击「不感兴趣」，一旦点了，那我就再也看不到任何关于 JoJo 的推送了。因此我决定自己动手丰衣足食。下面给大家推荐我的信息获取方式:</p><h3 id="工具"><a class="header-anchor" href="#工具"></a>工具</h3><h4 id="rsshub-inoreader"><a class="header-anchor" href="#rsshub-inoreader"></a>RSSHub + Inoreader</h4><p>你可能对 RSS 技术有所耳闻，毕竟近来乘着东风（ Reeder 无需付费、Rsshub 功能日趋完善、Inoreader 手机端 UI 大换血），RSS 又双叒叕有了复兴的迹象。你不知道的是，从「略有耳闻」到熟练使用之间<strong>没有</strong>那么想象中那么大的鸿沟。<a href="https://baike.baidu.com/item/RSS%E8%AE%A2%E9%98%85" target="_blank" rel="noopener">RSS 技术 </a>能够针对特定的站点，自动进行动态信息采集。理论上来说，网上的任何动态内容都可以被制作成一个 XML 文件供你的阅读器获取。</p><p>这里涉及两个概念：RSS 源、RSS 阅读器。<strong>RSS 源</strong>可以理解为一个具有固定格式的信息源，但是这个源不方便阅读，所以需要通过 <strong>RSS 阅读器</strong>的「订阅」来把它转化为人类读得懂的格式。下面举个例子：本博客的 RSS 源是<a href="https://daha.me/rss2.xml" target="_blank" rel="noopener">https://daha.me/rss2.xml</a> ，把这个<strong>网址</strong>粘贴到阅读器的 RSS 搜索框，点击订阅，就可以接收我的博客更新了。</p><p>不过<a href="http://www.cnblogs.com/tinyphp/archive/2013/04/19/3030233.html" target="_blank" rel="noopener">自己制作 RSS 源</a>还是比较麻烦的。所以推荐使用 <a href="https://rsshub.js.org/#%E4%B8%BB%E9%A2%98" target="_blank" rel="noopener">RSSHub</a> ，DIYGod 开发的 RSS 生成器，几乎涵盖了国内所有常用网站。找到相应实例，修改网址里对应的参数即可得到你想要的 RSS 源。</p><p>阅读器我用的是 <strong><a href="https://www.inoreader.com/" target="_blank" rel="noopener">Inoreader</a></strong>,免费版功能足够齐全，支持多端同步。之前还用过<a href="http://www.feeddemon.com/" target="_blank" rel="noopener">FeedDemon</a> ，不过 2013 年就停止维护了，用户界面比较老旧。</p><h4 id="即刻"><a class="header-anchor" href="#即刻"></a>即刻</h4><p>这是一款<strong>信息聚合</strong> app（也有<a href="https://web.okjike.com/feed/post" target="_blank" rel="noopener">网页版</a>），其理念和 RSS 类似。「主题」的概念是信息聚合的一个站点，订阅主题之后便能获取相应信息。比如主题「XX 又发新的微博了」，一旦 XX po 了新微博，就会在你的时间线上出现。除了官方的主题，还可以<strong>自己建主题</strong>抓取信息。即刻优于 RSS 订阅的地方是，一些主题是由编辑人工筛选的，如「一觉醒来世界发生了什么」，另外订阅主题比订阅 RSS 方便很多。</p><p>不过我最终还是弃用了即刻的信息聚合功能，详见下文。</p><h3 id="即刻劝退"><a class="header-anchor" href="#即刻劝退"></a>即刻劝退</h3><p>@普朗克 在即刻说，他利用 RSSHub 订阅了即友的动态，解决了分组的问题。最初我的想法也差不多，我是把即刻<strong>完全地</strong>转移到 RSS 阅读器上，用了一个月后发现我错了。文章/信息是冷静的，需要我自己咀嚼、思考乃至沉淀。动态不一样，从编辑到发出，po 主的目的就是分享与交流。同时动态也需要交流，因为字数的限制，动态观点往往有漏洞或不全面，通过讨论可以丰富自己的理解。另一个方面，信息内容的编写过程可谓严谨，尤其是长文章、博客，作者要以通顺的逻辑将其发表出来，得费一番工夫；相反，动态一般是分享日常见闻、随意吐槽。读者在浏览这两类内容时，用的是「两个脑子」：一个严肃、一个轻松。如果把两类内容放一起呈现，思维难免切换不过来。</p><p>而即刻，从去年10月开始力推社交以来，信息聚合方面一路下行。外有知乎、微博限制机器人抓取，可读内容少得可怜；内有过于随意的精选机制，导致主题注水浮肿。对于后者，鼓励用户产出内容无可厚非，但是不顾招牌（信息聚合）的好坏，就和饮鸩止渴无异了。</p><p>所以现在几乎采取了和@普朗克 完全相反的做法：只用 RSS 源订阅即刻的主题，即友动态仍然用即刻来看。其实有一个更显而易见的理由：信息易于分类，而「人」有千张面孔，不是吗？</p><p><em>&lt;完&gt;</em></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 互联网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>成为「部落客」</title>
      <link href="/blog01/2018/06/"/>
      <url>/blog01/2018/06/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这周花了些时间建立了我的个人博客。如你所见，基本框架已经成型了。为什么我要建博客呢？</p></blockquote><h3 id="拒绝互联网壁垒"><a class="header-anchor" href="#拒绝互联网壁垒"></a>拒绝互联网壁垒</h3><p>Blog ，即 We<strong>b Log</strong> 的简写。台湾称其为「部落格」，大陆译作「博客」。它是 <a href="https://en.wikipedia.org/wiki/Web_2.0" target="_blank" rel="noopener">Web 2.0</a> 的典型代表，如果你先前对此有所了解，就会知道其实它已经「过时」了——我们现在可是处于 <a href="https://www.lifewire.com/what-is-web-3-0-3486623" target="_blank" rel="noopener">Web 3.0</a> 的时代。</p><p>一年前我开了一个微信公众号，打算在上面写点文字。但是几个客观原因让我放弃了更新：</p><ol><li>编辑极不方便，不支持markdown，必须使用第三方的排版软件</li><li>微信公众号不允许插入公众号<strong>以外</strong>的链接</li><li>微信公众号的评论区不能<strong>即时</strong>呈现</li><li>操作必须手机+ PC 结合</li><li>无法用<strong>任意的</strong>搜索引擎搜索到公众号内容</li><li>不能提供除微信外的其他订阅方式</li></ol><p>在以上陈列的理由里，除了第 1 点和第 4 点之外，其他的都是 「在<a href="https://zhidao.baidu.com/question/629475730515462444.html" target="_blank" rel="noopener"><strong>墙</strong></a>内又添了一道墙」。不只是微信，各大网站不约而同地发出这样的信息：来我们这里吧，别去他处了。然而信息的价值依靠传播实现，任何建造壁垒的行为都是违背<a href="https://www.zhihu.com/question/19571539/answer/12252090" target="_blank" rel="noopener">互联网精神</a>的。<strong>不鳥萬如一</strong> 在《<a href="https://blog.yitianshijie.net/2016/02/21/byebye-wechat/" target="_blank" rel="noopener">告別微信</a>》中说的，也正是我对微信的态度，也应是大家的态度：</p><blockquote><p>我反对把自己文化生活的主导权让渡给任何一个<strong>品牌</strong>的生活方式。</p><p>我拒绝一个不允许链接到自有<strong>生态圈以外资源</strong>的媒体基础设施。</p></blockquote><h3 id="走出舒适区"><a class="header-anchor" href="#走出舒适区"></a>走出舒适区</h3><p>我认为「走出舒适区」有两种实现方式：一是<strong>建立</strong>新习惯，二是<strong>抛弃</strong>旧习惯。正好不久前知道了 <strong>@Joway</strong> 的<a href="https://blog.joway.io" target="_blank" rel="noopener">博客</a>,很喜欢它简约而极客的风格。所以我把建博客作为本周的 flag ，尝试建立新的习惯。</p><blockquote><p><a href="https://yitianshijie.net" target="_blank" rel="noopener">不鳥萬如一：《一天世界》博客</a><br><a href="https://joway.io" target="_blank" rel="noopener">Joway Wang</a></p></blockquote><hr><h3 id="如何食用本博客？"><a class="header-anchor" href="#如何食用本博客？"></a>如何食用本博客？</h3><h4 id="使用"><a class="header-anchor" href="#使用"></a>使用</h4><ul><li>终端选择：PC 端阅读体验更佳。</li></ul><h4 id="订阅"><a class="header-anchor" href="#订阅"></a>订阅</h4><ul><li><a href="https://blog.daha.me/rss2.xml">RSS</a> (<a href="https://baike.baidu.com/item/rss/24470" target="_blank" rel="noopener">这是什么？</a>）</li></ul><hr><h3 id="怎么建个人博客"><a class="header-anchor" href="#怎么建个人博客"></a>怎么建个人博客</h3><p>其实不太难——你<strong>不需要</strong>任何的代码基础，可以利用现成的框架 <a href="https://hexo.io/docs/" target="_blank" rel="noopener">Hexo</a>。而基于 Hexo ,网友做了各式各样的<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">主题</a>供你使用。我用的是 <a href="https://github.com/viosey/hexo-theme-material" target="_blank" rel="noopener">material 主题</a>，你可以在本站主页的底部看到。</p><p>有一篇<a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="noopener">知乎专栏文章</a>详尽地介绍了从域名购买到个性化配置的具体做法。所以你如果也想借助 Hexo 建一个博客，可以参看上述专栏。</p><hr>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 互联网 </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>timeline</title>
      <link href="/timeline/index.html"/>
      <url>/timeline/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
